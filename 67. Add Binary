Given two binary strings a and b, return their sum as a binary string.

Example 1:

Input: a = "11", b = "1"
Output: "100"

Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 
Constraints:

1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.

Code :

class Solution {
public:
    string addBinary(string a, string b) {
       string result = "";
       int carry = 0; 

       int i = a.length() - 1;
       int j = b.length() - 1;

    while (i >= 0 || j >= 0 || carry > 0) {
        int digitA = (i >= 0) ? a[i] - '0' : 0;
        int digitB = (j >= 0) ? b[j] - '0' : 0;

        int sum = digitA + digitB + carry;
        result = to_string(sum % 2) + result;

        carry = sum / 2;
        i--;
        j--;
    }
    return result;
    }
};
