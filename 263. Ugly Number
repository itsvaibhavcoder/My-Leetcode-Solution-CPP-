An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.

Given an integer n, return true if n is an ugly number.


Example 1:

Input: n = 6
Output: true
Explanation: 6 = 2 Ã— 3

Example 2:

Input: n = 1
Output: true
Explanation: 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.

Example 3:

Input: n = 14
Output: false
Explanation: 14 is not ugly since it includes the prime factor 7.
 

Constraints:

-231 <= n <= 231 - 1

Code :

class Solution {
public:
    bool isUgly(int n) {
    if (n <= 0) {
        return false; //Ugly numbers are positive integers
    }

    while (n % 2 == 0) {
        n /= 2;  //Divide by 2 until no longer divisible
    }
    while (n % 3 == 0) {
        n /= 3;  //Divide by 3 until no longer divisible
    }
    while (n % 5 == 0) {
        n /= 5;  //Divide by 5 until no longer divisible
    }

    //At this point, if n becomes 1, it's an ugly number, as all its prime factors have been removed
    return n == 1;
   }
};
