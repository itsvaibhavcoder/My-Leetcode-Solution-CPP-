// Given an array of integers nums, calculate the pivot index of this array.
// The pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.


// code start here

class Solution {
public:
    int pivotIndex(vector<int>& nums) {
         int n = nums.size();
        int sum = 0; // initialize sum of whole array 
        int leftsum = 0; // initialize leftsum 

	    /* Find sum of the whole array */
	   for (int i = 0; i < n; ++i) 
	    	sum += nums[i]; 

	for (int i = 0; i < n; ++i) 
	{ 
		sum -= nums[i]; // sum is now right sum for index i 

		if (leftsum == sum) 
			return i; 

		leftsum += nums[i]; 
	} 

	/* If no equilibrium index found, then return 0 */
	return -1; 
        
    }
};
